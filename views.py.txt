import os
import pytesseract
from pdf2image import convert_from_path
from django.shortcuts import get_object_or_404
from rest_framework import viewsets, status
from rest_framework.response import Response
from .models import ExtractedInfo
from .serializers import ExtractedInfoSerializer

class ExtractedInfoViewSet(viewsets.ModelViewSet):
    serializer_class = ExtractedInfoSerializer

    def get_queryset(self):
        user = self.request.user
        return ExtractedInfo.objects.filter(user=user)

    def extract_text_from_pdf(self, pdf_path):
        images = convert_from_path(pdf_path)
        text = ""
        for img in images:
            text += pytesseract.image_to_string(img, lang='eng')
        return text

    def extract_info_from_text(self, text):
        name = "John Doe"
        address = "1234 Elm St, City, State"
        income = 50000.0
        return name, address, income

    def create(self, request):
        file = request.FILES.get('file')

        # Save the uploaded PDF file temporarily
        pdf_path = 'temp.pdf'
        with open(pdf_path, 'wb') as temp_file:
            for chunk in file.chunks():
                temp_file.write(chunk)

        # Extract text from the PDF using OCR
        extracted_text = self.extract_text_from_pdf(pdf_path)

        # Extract specific details (name, address, income) from the extracted text
        name, address, income = self.extract_info_from_text(extracted_text)

        # Delete the temporary PDF file
        os.remove(pdf_path)

        user = request.user
        extracted_info = ExtractedInfo.objects.create(user=user, name=name, address=address, income=income)
        extracted_info.save()

        serializer = self.serializer_class(extracted_info)
        return Response(serializer.data, status=status.HTTP_201_CREATED)